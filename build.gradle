import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.3'
        classpath group: 'com.github.rodionmoiseev.gradle.plugins', name: 'idea-utils', version: '0.2'
        classpath group: 'de.undercouch', name: 'gradle-download-task', version: '4.1.1'
    }
}

apply plugin: 'java'
apply plugin: 'eu.appsatori.fatjar'
apply plugin: 'de.undercouch.download'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'idea-utils'

idea {
    project {
        ipr {
            withXml { xmlProvider ->
                def project = xmlProvider.asNode()
                def runConfigs = new XmlParser().parse(new File("config/intellij_runconfigs.txt"))
                project.append(runConfigs)
            }
        }
    }
}

repositories {
    jcenter()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
        url "https://oss.sonatype.org/content/groups/public"
    }
    ivy {
        url "http://getspigot.org/jenkins/job/Spigot/lastSuccessfulBuild/artifact"
        layout 'pattern', {
            ivy '[module]-ivy.xml'
            artifact '[module]-[revision].[ext]'
        }
    }
}

ext {
    minecraftVersion = "1.16.4-R0"
    vincModVersion = "1"
}

group = "net.javaforge.minecraft.spigot"
version = getTag() + "-" + minecraftVersion
sourceCompatibility = 1.8

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Plugin version: ' + version)

dependencies {
    compile "org.spigotmc:spigot-api:${minecraftVersion}.1-SNAPSHOT", {
        ext { fatJarExclude = true }
    }

    compile 'com.google.guava:guava:19.0'
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

clean {
    delete "testserver/"
}

task setupDevServer(type: Copy) {
    from 'config/serverfiles'
    into 'testserver'
}

task cleanPlugins() {
    delete "testserver/plugins"
}

task copyPluginToTestserver(dependsOn: ['build'], type: Copy) {
    from "${buildDir}/libs"
    into "testserver/plugins"
}

task startDevServer(dependsOn: ['cleanPlugins', 'copyPluginToTestserver', 'setupDevServer'], type: JavaExec) {
    classpath configurations.compile
    main = "org.bukkit.craftbukkit.Main"
    workingDir = "testserver/"
    standardInput = System.in
}

jar {
    actions = []
    dependsOn = []
    dependsOn('fatJar')
}

static def getTag() {
    def tagVersion = "$System.env.VERSION"
    if (tagVersion == "null") {
        // with local un-commited changes a -DIRTY is added
        def processChanges = "git diff-index --name-only HEAD --".execute()
        def dirty = ""
        if (!processChanges.text.toString().trim().isEmpty())
            dirty = "-DIRTY"

        def process = "git describe --tags".execute()
        tagVersion = process.text.toString().trim() + dirty
    } else {
        def tagVersionToken = tagVersion.split("/")
        if (tagVersionToken.size() > 2)
            tagVersion = tagVersionToken[2]
        else
            tagVersion = tagVersionToken[0]
    }
    return tagVersion
}
